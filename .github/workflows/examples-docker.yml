# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@0db984c1826869dcd0740ff26ff75ff543238fd9
        uses: docker/build-push-action@v2.2.1
        with:
          # Builder instance
          #builder: # optional
          # Build's context is the set of files located in the specified PATH or URL
          context: ./examples # optional
          # Path to the Dockerfile
          file: ./examples/dockerfile
          # List of build-time variables
          #build-args: # optional
          # List of metadata for an image
          #labels: # optional
          # List of tags
          tags: azocolo/py-controller-model-examples:latest
          # Always attempt to pull a newer version of the image
          #pull: # optional, default is false
          # Sets the target stage to build
          #target: # optional
          # List of extra privileged entitlement (eg. network.host,security.insecure)
          #allow: # optional
          # Do not use cache when building the image
          #no-cache: # optional, default is false
          # List of target platforms for build
          #platforms: # optional
          # Load is a shorthand for --output=type=docker
          #load: # optional, default is false
          # Push is a shorthand for --output=type=registry
          #push: true # optional, default is false
          # List of output destinations (format: type=local,dest=path)
          outputs: azocolo/py-controller-model-examples # optional
          # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
          #cache-from: # optional
          # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
          #cache-to: # optional
          # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
          #secrets: # optional
          # GitHub Token used to authenticate against a repository for Git context
          #github-token: # optional, default is ${{ github.token }}
          # List of SSH agent socket or keys to expose to the build
          #ssh: # optional
